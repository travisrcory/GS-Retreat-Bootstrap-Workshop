<%--
/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */
--%>

<%
DisplayTerms displayTerms = searchContainer.getDisplayTerms();

int status = WorkflowConstants.STATUS_APPROVED;

if (DDLRecordSetPermission.contains(permissionChecker, recordSet, ActionKeys.ADD_RECORD)) {
	status = WorkflowConstants.STATUS_ANY;
}

if (Validator.isNull(displayTerms.getKeywords())) {
	total = DDLRecordLocalServiceUtil.getRecordsCount(recordSet.getRecordSetId(), status);

	searchContainer.setTotal(total);

	results = DDLRecordLocalServiceUtil.getRecords(recordSet.getRecordSetId(), status, searchContainer.getStart(), searchContainer.getEnd(), searchContainer.getOrderByComparator());
}
else {
	SearchContext searchContext = SearchContextFactory.getInstance(request);

	searchContext.setAttribute("recordSetId", recordSet.getRecordSetId());
	searchContext.setAttribute(Field.STATUS, status);
	searchContext.setEnd(searchContainer.getEnd());
	searchContext.setKeywords(displayTerms.getKeywords());
	searchContext.setStart(searchContainer.getStart());

	Hits hits = DDLRecordLocalServiceUtil.search(searchContext);

	results = DDLUtil.getRecords(hits);

	total = results.size();

	searchContainer.setTotal(total);
}

searchContainer.setResults(results);
%>