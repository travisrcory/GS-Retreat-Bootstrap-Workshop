<%--
/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */
--%>

<c:if test="<%= marketplaceURL != null %>">

	<%
	String taglibOnClick = "submitForm(document." + renderResponse.getNamespace() + "fm , '" + marketplaceURL.toString() +"');";
	%>

	<aui:button onClick="<%= taglibOnClick %>" value="install-more-portlets" />

	<br /><br />
</c:if>

<%
List<String> headerNames = new ArrayList<String>();

headerNames.add("portlet");
headerNames.add("active");

if (showReindexButton) {
	headerNames.add("search-index");
}

SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, SearchContainer.DEFAULT_DELTA, portletURL, headerNames, null);

List<Portlet> portlets = PortletLocalServiceUtil.getPortlets(company.getCompanyId(), false, false);

portlets = ListUtil.sort(portlets, new PortletTitleComparator(application, locale));

int total = portlets.size();

searchContainer.setTotal(total);

List<Portlet> results = ListUtil.subList(portlets, searchContainer.getStart(), searchContainer.getEnd());

searchContainer.setResults(results);

List resultRows = searchContainer.getResultRows();

for (int i = 0; i < results.size(); i++) {
	Portlet portlet = results.get(i);

	PluginPackage pluginPackage = portlet.getPluginPackage();

	ResultRow row = new ResultRow(portlet, portlet.getId(), i);

	PortletURL rowURL = renderResponse.createRenderURL();

	rowURL.setParameter("struts_action", "/plugins_admin/edit_plugin");
	rowURL.setParameter("redirect", currentURL);

	if (pluginPackage != null) {
		rowURL.setParameter("moduleId", pluginPackage.getModuleId());
	}

	rowURL.setParameter("pluginId", portlet.getPortletId());
	rowURL.setParameter("pluginType", Plugin.TYPE_PORTLET);

	String title = PortalUtil.getPortletTitle(portlet, application, locale);

	rowURL.setParameter("title", title);

	// Name and description

	StringBundler sb = new StringBundler();

	String displayName = portlet.getDisplayName();

	if (showEditPluginHREF) {
		sb.append("<a href=\"");
		sb.append(rowURL.toString());
		sb.append("\">");
	}

	sb.append(title);

	if (showEditPluginHREF) {
		sb.append("</a>");
	}

	sb.append("<br />");
	sb.append(LanguageUtil.get(pageContext, "package"));
	sb.append(": ");

	if (pluginPackage == null) {
		sb.append(LanguageUtil.get(pageContext, "unknown"));
	}
	else {
		sb.append(HtmlUtil.escape(pluginPackage.getName()));

		if (pluginPackage.getContext() != null) {
			sb.append(" (");
			sb.append(pluginPackage.getContext());
			sb.append(StringPool.CLOSE_PARENTHESIS);
		}
	}

	if (Validator.isNotNull(displayName) && !title.equals(displayName)) {
		sb.append("<br />");
		sb.append(portlet.getDisplayName());
	}

	row.addText(sb.toString());

	// Active

	row.addText(LanguageUtil.get(pageContext, (portlet.isActive() ? "yes" : "no")));

	// Search index

	if (showReindexButton) {
		List<String> indexerClasses = portlet.getIndexerClasses();

		if (!indexerClasses.isEmpty()) {
			sb.setIndex(0);

			sb.append("<input onclick=\"");
			sb.append(renderResponse.getNamespace());
			sb.append("reindexPortlet('");
			sb.append(HtmlUtil.escapeJS(portlet.getPortletId()));
			sb.append("');\" type=\"button\" value=\"");
			sb.append(LanguageUtil.get(pageContext, "reindex"));
			sb.append("\" />");

			row.addText(sb.toString());
		}
		else {
			row.addText(StringPool.BLANK);
		}
	}

	// Add result row

	resultRows.add(row);
}
%>

<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" />

<c:if test="<%= showReindexButton %>">
	<aui:script>
		function <portlet:namespace />reindexPortlet(portletId) {
			document.<portlet:namespace />fm.<portlet:namespace />portletId.value = portletId;
			<portlet:namespace />saveServer('reindex');
		}
	</aui:script>
</c:if>